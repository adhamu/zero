name: CI

on:
  push:
    branches:
      - "*"
    tags-ignore:
      - "*"

jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set Environment Variables
        run: |
          git --no-pager log --decorate=short --pretty=oneline -n1

          git tag | cat

          echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
          echo ::set-output name=CURRENT_VERSION::$(cat package.json | jq -r '.version')
          echo ::set-output name=PUBLISHED_VERSION::$(npm view @adhamu/zero version)
          echo ::set-output name=BRANCH::${GITHUB_REF##*/}

          changeset=$(git log 5.1.0..$(npm view @adhamu/zero version) --format="%C(auto)%h %s")
          changeset="${changeset//'%'/'%25'}"
          changeset="${changeset//$'\n'/'%0A'}"
          changeset="${changeset//$'\r'/'%0D'}"
          echo ::set-output name=RELEASE_NOTES::${changeset}

        id: env_vars

      - name: Install Node.js ${{ steps.env_vars.outputs.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Security Audit
        run: yarn audit || true

      - name: Outdated Packages
        run: yarn outdated || true

      - name: Coding Standards
        run: yarn lint

      - name: Get release notes
        run: |
          echo -e "${{ steps.env_vars.outputs.RELEASE_NOTES }}

          **Full Changelog**: https://github.com/adhamu/zero/compare/5.1.0..${{ steps.env_vars.outputs.PUBLISHED_VERSION }}"

      - name: Create Draft Release
        if: github.ref != 'refs/heads/main'
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ steps.env_vars.outputs.CURRENT_VERSION }}
          release_name: ${{ steps.env_vars.outputs.CURRENT_VERSION }}
          body: "${{ steps.env_vars.outputs.RELEASE_NOTES }}\n\nFull Changelog**: https://github.com/adhamu/zero/compare/5.1.0..${{ steps.env_vars.outputs.PUBLISHED_VERSION }}"
          draft: true
          prerelease: true

      - name: Create Release
        if: github.ref == 'refs/heads/main'
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ steps.env_vars.outputs.CURRENT_VERSION }}
          release_name: ${{ steps.env_vars.outputs.CURRENT_VERSION }}
          body: "**Full Changelog**: https://github.com/adhamu/zero/compare/${{ steps.env_vars.outputs.PUBLISHED_VERSION }}...${{ steps.env_vars.outputs.CURRENT_VERSION }}"
          draft: false
          prerelease: false

      - name: Publish to Registry
        run: |
          pkg_version=${{ steps.env_vars.outputs.CURRENT_VERSION }}
          branch=${{ steps.env_vars.outputs.BRANCH }}

          if [[ $branch != "main" ]]; then
            yarn version --new-version "$pkg_version-beta$GITHUB_RUN_NUMBER" --no-git-tag-version
            yarn publish --tag beta --access public
          else
            yarn publish --access public
          fi
