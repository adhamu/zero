name: CI

on: push

jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set Node version from .nvmrc
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
        id: nvm

      - name: Install Node.js ${{ steps.nvm.outputs.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.nvm.outputs.NODE_VERSION }}

      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Security Audit
        run: yarn audit || true

      - name: Outdated Packages
        run: yarn outdated || true

      - name: Coding Standards
        run: yarn lint

      - name: NPM Publish
        run: |
          pkg_name=$(cat package.json | jq -r '.name')
          pkg_version=$(cat package.json | jq -r '.version')
          major=$(echo "$pkg_version" | cut -d. -f1)
          minor=$(echo "$pkg_version" | cut -d. -f2)
          patch=$(echo "$pkg_version" | cut -d. -f3)
          branch=${GITHUB_REF##*/}

          echo $pkg_name
          echo $pkg_version
          echo $major
          echo $minor
          echo $patch
          echo $branch

          if [[ $branch == "main" ]]; then
            version="${pkg_version}-beta"
          else
            version=pkg_version
          fi

          echo $version

